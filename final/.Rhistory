type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
citation("ape")
citation("phytools")
citation("ggtree")
citation(ggplot2)
citation("ggplot2")
labelKeyBI <- read.csv("labelKeyBI.csv")
labelKeyBI
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
legend(legend("topright", inset=c(-0.2,0),
legend = c("GFP", "CFP", "YFP", "RFP", "OFP"),
fill = c("green", "cyan", "yellow", "red", "orange")))
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
legend("topright", inset=c(-0.2,0), legend = c("GFP", "CFP", "YFP", "RFP", "OFP"), fill = c("green", "cyan", "yellow", "red", "orange"))
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny") +
legend("topright", inset=c(-0.2,0), legend = c("GFP", "CFP", "YFP", "RFP", "OFP"), fill = c("green", "cyan", "yellow", "red", "orange"))
?gglegend
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny") +
gglegend("topright", inset=c(-0.2,0), legend = c("GFP", "CFP", "YFP", "RFP", "OFP"),
fill = c("green", "cyan", "yellow", "red", "orange"))
# plot BI consensus tree
BItree <-read.nexus("mrbayes_final.tre")
genus <- labelKeyBI$Genus
species <- labelKeyBI$Species
com <- labelKeyBI$Com
cols <- labelKeyBI$Color
d <- data.frame(label = BItree$tip.label, genus = genus,
species = species, com = com)
BIplot <- ggtree(BItree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Bayesian Inference Phylogeny")
plot(BIplot)
# plot ML output tree
MLtree <- read.nexus("maxlikelihood_final.tre")
labelKeyML <- read.csv("labelKeyML.csv")
genus <- labelKeyML$Genus
species <- labelKeyML$Species
com <- labelKeyML$Com
cols <- labelKeyML$Color
d <- data.frame(label = MLtree$tip.label, genus = genus,
species = species, com = com)
MLplot <- ggtree(MLtree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(MLplot)
ERplot <- ggtree(MLtree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(ERplot)
# ER plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(MATRIX)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
MLtree$tip.label <- paste0('italic(', genus, ')~bolditalic(', species, ')~', com)
MLtree$tip.label
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
# ER reconstructions
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
ERreconstruction
# ER plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
MLtree$tip.label <- d
MLtree$tip.label
MLtree$tip.label <- d$genus + d$species + d$com
MLtree$tip.label <- apply(d$genus, d$species, d$com)
MLtree$tip.label <- c(d$genus, d$species, d$com)
MLtree$tip.label
# plot ML output tree
MLtree <- read.nexus("maxlikelihood_final.tre")
is.rooted(MLtree) # yes
MLtree$tip.label
labelKeyML <- read.csv("labelKeyML.csv")
labelKeyML
genus <- labelKeyML$Genus
species <- labelKeyML$Species
com <- labelKeyML$Com
d <- data.frame(label = labelKeyML$tip.label, genus = genus,
species = species, com = com)
cols <- labelKeyML$Color
MLplot <- ggtree(MLtree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(MLplot)
# ARD plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2)
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
%<+% d tiplabels(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2)
# ARD plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
%<+% d tiplabels(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2)
# ARD plot
plot(MLtree %<+% d, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2)
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
tr2 = rename_taxa(MLtree, d, label, genus)
write.tree(tr2)
tr2 = rename_taxa(MLtree, d, label, genus)
MLtree$tip.label
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
# ER reconstructions
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
ERreconstruction
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodepoint(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
?thermo
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelabel(aes(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3)) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(aes(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3)) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
plot(ERplot)
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(aes(color = ERreconstruction$lik.anc)) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
plot(ERplot)
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(aes(color = as.factor(ERreconstruction$lik.anc))) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
plot(ERplot)
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(aes(color = co[as.factor(ERreconstruction$lik.anc)])) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
plot(ERplot)
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols))
ERplot <- ggtree(MLtree)  %<+% d + xlim(NA, 2) +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
ggtitle("Flourescent Protein Color State Equal Rate Reconstruction")
plot(ERplot)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3)
library(treeio)
tr2 = rename_taxa(MLtree, d, label, genus)
write.tree(tr2)
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep='|'))
d2
tr3 = rename_taxa(tr, d2, label, newlab)
write.tree(tr3)
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep='|'))
d2
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=' '))
d2
d3 = dplyr::mutate(d2, newlab = paste(newlab, com, sep='|'))
d3
tr3 = rename_taxa(MLtree, d2, label, newlab)
tr2 = rename_taxa(MLtree, d3, label, newlab)
write.tree(tr2)
# ER reconstructions
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
ERreconstruction
# ER plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# ER plot
plot(tr2, font = 4, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# ER plot
plot(tr2, font = 2, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# ER plot
plot(tr2, font = 3, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=' '))
d3 = dplyr::mutate(d2, newlab = paste(newlab, com, sep='|'))
tr2 = rename_taxa(MLtree, d3, label, newlab)
write.tree(tr2)
# ER reconstructions
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
# ER plot
plot(tr2, font = 3, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# AR reconstruction
ARDreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ARD")
# ARD plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2)
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=' '))
d3 = dplyr::mutate(d2, newlab = paste(newlab, com, sep='|'))
tr2 = rename_taxa(MLtree, d3, label, newlab)
write.tree(tr2)
# ER reconstructions
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
# ER plot
plot(tr2, font = 3, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# ER plot
plot(tr2, font = 3, lwd = 3,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
# ER reconstruction
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
# ER plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# AR reconstruction
ARDreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ARD")
# ARD plot
plot(MLtree, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
# load required packages
library(ggplot2)
library(phytools)
library(ape)
library(ggtree)
library(treeio)
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
# rename tip labels
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=' '))
d3 = dplyr::mutate(d2, newlab = paste(newlab, com, sep='|'))
tr2 = rename_taxa(MLtree, d3, label, newlab)
write.tree(tr2)
# ER reconstruction
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
# ER plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# AR reconstruction
ARDreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ARD")
# ARD plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
states <- factor(c(0,0,0,0,0,0,0,
0,0,4,0,0,1,2,
3,2,0,3,0,0,0,
0,0,0,0,3,0,0,
0,1,1,0,3,3,0,
0))
names(states) <- MLtree$tip.label
# rename tip labels
d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=' '))
d3 = dplyr::mutate(d2, newlab = paste(newlab, com, sep='|'))
tr2 = rename_taxa(MLtree, d3, label, newlab)
# ER reconstruction
ERreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ER")
# ER plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State Equal Rate Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ERreconstruction$lik.anc, piecol = co, cex = 0.3) # log likelihood of what the prob is for the ancestor color is
# AR reconstruction
ARDreconstruction <- ace(states, MLtree, type = "d", method = "ML", CI = TRUE, model = "ARD")
# ARD plot
plot(tr2, font = 4, lwd = 6,
type = "p", FALSE, label.offset = 1.6,
main = "Flourescent Protein Color State All Rates Different Reconstruction")
co <- c("GREEN", "CYAN", "YELLOW", "RED", "ORANGE")
tiplabels(pch = 22, bg = co[as.numeric(states)], cex = 1.5, adj = 1)
nodelabels(thermo = ARDreconstruction$lik.anc, piecol = co, cex = 0.3)
View(labelKeyML)
# plot ML output tree
MLtree <- read.nexus("maxlikelihood_final.tre")
labelKeyML <- read.csv("labelKeyML.csv")
genus <- labelKeyML$Genus
species <- labelKeyML$Species
com <- labelKeyML$Com
cols <- labelKeyML$Color
d <- data.frame(label = MLtree$tip.label, genus = genus,
species = species, com = com)
MLplot <- ggtree(MLtree, ladderize = TRUE) %<+% d + xlim(NA, 2) +
#geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(MLplot)
plot(MLtree)
MLplot <- ggtree(MLtree) %<+% d +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(MLtree)
plot(MLplot)
# plot ML output tree
MLtree <- read.nexus("maxlikelihood_final.tre")
labelKeyML <- read.csv("labelKeyML.csv")
genus <- labelKeyML$Genus
species <- labelKeyML$Species
com <- labelKeyML$Com
cols <- labelKeyML$Color
d <- data.frame(label = MLtree$tip.label, genus = genus,
species = species, com = com)
MLplot <- ggtree(MLtree) %<+% d +
geom_tiplab(aes(label = paste0('italic(', genus, ')~bolditalic(', species, ')~', com)), parse=T, size=2) +
geom_tippoint(pch=16, size=2, color=as.factor(cols)) +
geom_nodelab(geom = "label", node = "internal", size = 2, nudge_x = -0.01, alpha = 0.5) +
ggtitle("Flourescent Protein Maximum Likelihood Phylogeny")
plot(MLplot)
